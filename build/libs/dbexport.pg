--
-- PostgreSQL database dump
--

-- Dumped from database version 11.2
-- Dumped by pg_dump version 11.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: blocked_users; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.blocked_users (
    id integer NOT NULL,
    user_id integer,
    started timestamp without time zone,
    ends timestamp without time zone
);


ALTER TABLE public.blocked_users OWNER TO root;

--
-- Name: blocked_users_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.blocked_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.blocked_users_id_seq OWNER TO root;

--
-- Name: blocked_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.blocked_users_id_seq OWNED BY public.blocked_users.id;


--
-- Name: email_verification_tokens; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.email_verification_tokens (
    id integer NOT NULL,
    token character varying(256),
    user_id integer
);


ALTER TABLE public.email_verification_tokens OWNER TO root;

--
-- Name: email_verification_tokens_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.email_verification_tokens_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.email_verification_tokens_id_seq OWNER TO root;

--
-- Name: email_verification_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.email_verification_tokens_id_seq OWNED BY public.email_verification_tokens.id;


--
-- Name: forgot_password_token; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.forgot_password_token (
    id integer NOT NULL,
    token character varying,
    user_id integer
);


ALTER TABLE public.forgot_password_token OWNER TO root;

--
-- Name: forgot_password_token_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.forgot_password_token_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.forgot_password_token_id_seq OWNER TO root;

--
-- Name: forgot_password_token_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.forgot_password_token_id_seq OWNED BY public.forgot_password_token.id;


--
-- Name: friendship; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.friendship (
    id integer NOT NULL,
    user_id_1 integer,
    user_id_2 integer,
    status character varying,
    last_action integer
);


ALTER TABLE public.friendship OWNER TO root;

--
-- Name: friendship_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.friendship_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.friendship_id_seq OWNER TO root;

--
-- Name: friendship_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.friendship_id_seq OWNED BY public.friendship.id;


--
-- Name: message_ids; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.message_ids
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.message_ids OWNER TO root;

--
-- Name: messages; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.messages (
    message_text character varying(8192),
    "time" timestamp without time zone,
    message_id integer NOT NULL,
    username character varying(25),
    user_id integer,
    room_id integer,
    message_type character varying(45)
);


ALTER TABLE public.messages OWNER TO root;

--
-- Name: messages_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.messages_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.messages_id_seq OWNER TO root;

--
-- Name: messages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.messages_id_seq OWNED BY public.messages.message_id;


--
-- Name: online_users; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.online_users (
    id integer,
    is_online character varying,
    last_seen bigint
);


ALTER TABLE public.online_users OWNER TO root;

--
-- Name: role_ids; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.role_ids
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.role_ids OWNER TO root;

--
-- Name: roles; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.roles (
    id integer DEFAULT nextval('public.role_ids'::regclass) NOT NULL,
    role character varying(45) NOT NULL
);


ALTER TABLE public.roles OWNER TO root;

--
-- Name: room_members; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.room_members (
    room_id integer,
    user_id integer
);


ALTER TABLE public.room_members OWNER TO root;

--
-- Name: rooms; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.rooms (
    id integer NOT NULL,
    room_type character varying,
    title character varying(45),
    owner integer
);


ALTER TABLE public.rooms OWNER TO root;

--
-- Name: rooms_id_seq; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.rooms_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.rooms_id_seq OWNER TO root;

--
-- Name: rooms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: root
--

ALTER SEQUENCE public.rooms_id_seq OWNED BY public.rooms.id;


--
-- Name: user_ids; Type: SEQUENCE; Schema: public; Owner: root
--

CREATE SEQUENCE public.user_ids
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_ids OWNER TO root;

--
-- Name: user_roles; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.user_roles (
    role_id integer,
    user_id integer
);


ALTER TABLE public.user_roles OWNER TO root;

--
-- Name: users; Type: TABLE; Schema: public; Owner: root
--

CREATE TABLE public.users (
    login character(64) NOT NULL,
    password character(128) NOT NULL,
    username character varying(25),
    id integer DEFAULT nextval('public.user_ids'::regclass) NOT NULL,
    locked boolean,
    enabled boolean,
    token_id integer,
    status character varying(255)
);


ALTER TABLE public.users OWNER TO root;

--
-- Name: blocked_users id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.blocked_users ALTER COLUMN id SET DEFAULT nextval('public.blocked_users_id_seq'::regclass);


--
-- Name: email_verification_tokens id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.email_verification_tokens ALTER COLUMN id SET DEFAULT nextval('public.email_verification_tokens_id_seq'::regclass);


--
-- Name: forgot_password_token id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.forgot_password_token ALTER COLUMN id SET DEFAULT nextval('public.forgot_password_token_id_seq'::regclass);


--
-- Name: friendship id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.friendship ALTER COLUMN id SET DEFAULT nextval('public.friendship_id_seq'::regclass);


--
-- Name: messages message_id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.messages ALTER COLUMN message_id SET DEFAULT nextval('public.messages_id_seq'::regclass);


--
-- Name: rooms id; Type: DEFAULT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.rooms ALTER COLUMN id SET DEFAULT nextval('public.rooms_id_seq'::regclass);


--
-- Data for Name: blocked_users; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.blocked_users (id, user_id, started, ends) FROM stdin;
4	3	2019-12-07 12:26:00	2019-12-07 13:26:00
6	3	2019-12-10 15:12:00	2019-12-10 15:13:00
11	3	2019-12-19 15:00:00	\N
12	3	2019-12-26 12:26:00	\N
13	3	2019-12-26 12:27:00	2019-12-26 12:28:00
14	8	2020-02-03 15:17:00	2020-02-03 15:18:00
15	3	2020-02-03 17:36:00	2020-02-03 17:38:00
16	3	2020-02-03 18:11:00	2020-02-03 18:13:00
17	3	2020-02-03 18:24:00	\N
18	3	2020-02-03 18:28:00	\N
19	3	2020-02-03 18:29:00	1970-01-12 18:46:39.999
20	3	2020-02-03 18:32:00	1970-01-12 18:46:39.999
22	3	2020-02-03 18:45:00	\N
23	8	2020-06-06 19:48:00	2020-06-07 00:00:00
\.


--
-- Data for Name: email_verification_tokens; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.email_verification_tokens (id, token, user_id) FROM stdin;
30	a39c1d97-3703-4f09-a1a7-cab49bda661b	42
32	7e919df0-1a0b-4f59-8633-a34f12f46c1c	44
34	2faf6280-e69b-42c0-a93f-3d541a16fcac	47
\.


--
-- Data for Name: forgot_password_token; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.forgot_password_token (id, token, user_id) FROM stdin;
\.


--
-- Data for Name: friendship; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.friendship (id, user_id_1, user_id_2, status, last_action) FROM stdin;
26	9	8	friends	9
41	2	47	friends	47
43	2	8	friends	8
\.


--
-- Data for Name: messages; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.messages (message_text, "time", message_id, username, user_id, room_id, message_type) FROM stdin;
Как дела?	2020-04-25 13:08:48.925	640	root	2	21	text
Все хорошо! А у тебя?	2020-04-25 13:05:51.294	641	user	8	21	text
У меня тоже	2020-04-25 13:08:48.925	642	root	2	21	text
https://www.youtube.com/watch?v=4YBfEVq33R4	2020-06-09 18:56:42.577	822	root	2	1	text
.\\media\\img\\21\\6b133b05-4eac-4e08-be2d-0000d556921e.png	2020-04-25 13:12:33.667	644	user	8	21	image
Привет друг!	2020-04-25 13:22:36.911	649	user	8	21	text
Привет!	2020-04-25 12:39:33.011	625	root	2	21	text
Привет :)	2020-04-25 12:39:39.704	626	user	8	21	text
123	2020-04-12 16:15:19.507	502	root	2	10	text
.\\media\\img\\10\\94d3529e-29a8-42f4-b86c-76b05f005b37.jpg	2020-04-12 16:18:28	503	root	2	10	image
.\\media\\file\\68\\convolk - Swan Dive.mp3	2020-06-06 20:52:48.206	812	root	2	68	audio
.\\media\\file\\68\\video.mp4	2020-06-06 20:52:52.493	813	root	2	68	video
.\\media\\file\\68\\Без названия.jpg	2020-06-06 20:52:56.276	814	root	2	68	image
Добрый день	2020-06-06 21:35:47.129	816	root	2	1	text
.\\media\\file\\1\\convolk - Swan Dive.mp3	2020-06-06 21:36:18.295	817	ReDF	47	1	audio
.\\media\\file\\1\\video(1).mp4	2020-06-06 21:36:22.039	818	ReDF	47	1	video
.\\media\\file\\1\\Без названия.jpg	2020-06-06 21:36:27.801	819	ReDF	47	1	image
123	2020-06-06 21:39:42.59	820	ReDF	47	69	text
asd	2020-06-06 21:39:45.794	821	ReDF	47	69	text
\.


--
-- Data for Name: online_users; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.online_users (id, is_online, last_seen) FROM stdin;
47	OFFLINE	1591454532107
3	OFFLINE	1587117914246
9	OFFLINE	1589138068452
2	OFFLINE	1591710656963
8	OFFLINE	1591710783274
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.roles (id, role) FROM stdin;
1	USER
2	ADMIN
\.


--
-- Data for Name: room_members; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.room_members (room_id, user_id) FROM stdin;
56	44
62	44
21	8
42	3
66	8
47	3
68	2
1	2
1	47
1	8
1	47
69	47
\.


--
-- Data for Name: rooms; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.rooms (id, room_type, title, owner) FROM stdin;
66	dialogue	\N	2
10	dialogue	\N	\N
68	group	123	2
1	group	Общий чат	2
69	group	Общий чат	47
56	dialogue	\N	\N
19	group	test, root, user	\N
21	dialogue	\N	\N
61	group	123	\N
62	group	123	\N
33	dialogue	\N	\N
35	dialogue	\N	\N
36	dialogue	\N	\N
37	dialogue	\N	\N
38	dialogue	\N	\N
39	dialogue	\N	\N
40	dialogue	\N	\N
41	dialogue	\N	\N
42	dialogue	\N	\N
47	group	s	\N
\.


--
-- Data for Name: user_roles; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.user_roles (role_id, user_id) FROM stdin;
1	12
1	44
1	2
2	2
1	8
2	8
1	11
1	3
1	47
1	42
1	9
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: root
--

COPY public.users (login, password, username, id, locked, enabled, token_id, status) FROM stdin;
u@u.com                                                         	$2a$10$iMUpiirOyg5izrUDtZ8WSu1M.uG4vrg0PNHYAfNVAOpSSzCn5nJgW                                                                    	user	8	f	t	\N	
mr.alexas@mail.ru                                               	$2a$10$TdyiBLkFErkSmeiOjkh/yOH6bAEFv5Zx0KIQ0/xYnY749QPRvU.BC                                                                    	hanzoma1n	44	f	t	\N	
redf4412@gmail.com                                              	$2a$10$DENE8lvGXrMWwsvQPb.s4uDkbQqzMv3uGmU3L6otsKrqi0BYPPSEy                                                                    	ReDF	47	f	t	\N	
lol@mail.ru                                                     	$2a$10$KM3dbJN.xIR7zr/CwIa/j.YPKx/SM3PW3VORjf2IF3CyOCLZOutcm                                                                    	senddudes	12	f	t	\N	
g@g.com                                                         	$2a$10$f1gzX2QZsMCGb/FNlEU34u6IIrmONpAeO1Rgj9UwqSRnL0AIhelVC                                                                    	ggg	11	f	t	\N	
sdgsdg@sadgs.ru                                                 	$2a$10$I7o8ucHNP4ZBCPnW9kwkleSqdeir.6qQsxV6olcKCvX387H8EG9f.                                                                    	Sas	42	f	t	\N	
a@a.com                                                         	$2a$10$rGd3DsZ.ou25pM9wEwury.5zb8WOyYXcG1YOZchMElAKM4fydPwmO                                                                    	test1	9	f	t	\N	
test@test.com                                                   	$2a$10$RRQOVch81IDpJUs8ZK99T.tVK0Sn2JEAcKvelVwQrx.uLpL4bgTqu                                                                    	test	3	f	t	\N	
root@root.com                                                   	$2a$10$VoKUeCzrt00qMw87c8VFFuDc0PyvNNS9KCZw3oWUIMxnknRIHsGmy                                                                    	root	2	f	t	\N	12
\.


--
-- Name: blocked_users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.blocked_users_id_seq', 23, true);


--
-- Name: email_verification_tokens_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.email_verification_tokens_id_seq', 34, true);


--
-- Name: forgot_password_token_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.forgot_password_token_id_seq', 11, true);


--
-- Name: friendship_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.friendship_id_seq', 43, true);


--
-- Name: message_ids; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.message_ids', 827, true);


--
-- Name: messages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.messages_id_seq', 1, true);


--
-- Name: role_ids; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.role_ids', 1, false);


--
-- Name: rooms_id_seq; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.rooms_id_seq', 69, true);


--
-- Name: user_ids; Type: SEQUENCE SET; Schema: public; Owner: root
--

SELECT pg_catalog.setval('public.user_ids', 47, true);


--
-- Name: blocked_users blocked_users_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.blocked_users
    ADD CONSTRAINT blocked_users_pkey PRIMARY KEY (id);


--
-- Name: email_verification_tokens email_verification_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.email_verification_tokens
    ADD CONSTRAINT email_verification_tokens_pkey PRIMARY KEY (id);


--
-- Name: friendship friendship_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.friendship
    ADD CONSTRAINT friendship_pkey PRIMARY KEY (id);


--
-- Name: users login_unique; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT login_unique UNIQUE (login);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (message_id);


--
-- Name: roles roles_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- Name: rooms rooms_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: blocked_users blocked_users_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.blocked_users
    ADD CONSTRAINT blocked_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: email_verification_tokens email_verification_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.email_verification_tokens
    ADD CONSTRAINT email_verification_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: forgot_password_token forgot_password_token_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.forgot_password_token
    ADD CONSTRAINT forgot_password_token_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id);


--
-- Name: friendship friendship_user_id_1_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.friendship
    ADD CONSTRAINT friendship_user_id_1_fkey FOREIGN KEY (user_id_1) REFERENCES public.users(id);


--
-- Name: friendship friendship_user_id_2_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.friendship
    ADD CONSTRAINT friendship_user_id_2_fkey FOREIGN KEY (user_id_2) REFERENCES public.users(id);


--
-- Name: messages messages_room_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_room_id_fkey FOREIGN KEY (room_id) REFERENCES public.rooms(id) ON DELETE CASCADE;


--
-- Name: messages messages_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: online_users online_users_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.online_users
    ADD CONSTRAINT online_users_id_fkey FOREIGN KEY (id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: room_members room_members_room_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.room_members
    ADD CONSTRAINT room_members_room_id_fkey FOREIGN KEY (room_id) REFERENCES public.rooms(id) ON DELETE CASCADE;


--
-- Name: room_members room_members_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.room_members
    ADD CONSTRAINT room_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: rooms rooms_owner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.rooms
    ADD CONSTRAINT rooms_owner_fkey FOREIGN KEY (owner) REFERENCES public.users(id);


--
-- Name: user_roles user_roles_role_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT user_roles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id);


--
-- Name: user_roles user_roles_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.user_roles
    ADD CONSTRAINT user_roles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: users users_token_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: root
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_token_id_fkey FOREIGN KEY (token_id) REFERENCES public.email_verification_tokens(id);


--
-- PostgreSQL database dump complete
--

